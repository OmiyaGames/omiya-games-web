{
  "api/OmiyaGames.Web.html": {
    "href": "api/OmiyaGames.Web.html",
    "title": "Namespace OmiyaGames.Web | Web documentation",
    "keywords": "Namespace OmiyaGames.Web Structs PlatformSpecificLink A struct that returns a link specific to a platform. Useful as a SerializedField set in the inspector. Enums PlatformSpecificLink.SupportedPlatforms"
  },
  "api/OmiyaGames.Web.PlatformSpecificLink.html": {
    "href": "api/OmiyaGames.Web.PlatformSpecificLink.html",
    "title": "Struct PlatformSpecificLink | Web documentation",
    "keywords": "Struct PlatformSpecificLink A struct that returns a link specific to a platform. Useful as a SerializedField set in the inspector. Namespace : OmiyaGames.Web Assembly : cs.temp.dll.dll Syntax [Serializable] public struct PlatformSpecificLink Properties Platform Declaration public static PlatformSpecificLink.SupportedPlatforms Platform { get; } Property Value Type Description PlatformSpecificLink.SupportedPlatforms PlatformLink Declaration public string PlatformLink { get; } Property Value Type Description String WebLink Declaration public string WebLink { get; } Property Value Type Description String Methods GetPlatformLink(PlatformSpecificLink.SupportedPlatforms) Declaration public string GetPlatformLink(PlatformSpecificLink.SupportedPlatforms platform) Parameters Type Name Description PlatformSpecificLink.SupportedPlatforms platform Returns Type Description String"
  },
  "api/OmiyaGames.Web.PlatformSpecificLink.SupportedPlatforms.html": {
    "href": "api/OmiyaGames.Web.PlatformSpecificLink.SupportedPlatforms.html",
    "title": "Enum PlatformSpecificLink.SupportedPlatforms | Web documentation",
    "keywords": "Enum PlatformSpecificLink.SupportedPlatforms Namespace : OmiyaGames.Web Assembly : cs.temp.dll.dll Syntax public enum SupportedPlatforms Fields Name Description NativeAmazon NativeAndroid NativeIos NativeWin10 WebAmazon WebAndroid WebDefault WebiOS WebWin10"
  },
  "index.html": {
    "href": "index.html",
    "title": "Omiya Games - Web | Web documentation",
    "keywords": "Omiya Games - Web This package is currently under construction. For more info, visit Omiya Games . Install There are two common methods for installing this package. Through Unity Package Manager Unity's own Package Manager supports importing packages through a URL to a Git repo : First, on this repository page, click the \"Clone or download\" button, and copy over this repository's HTTPS URL. Then click on the + button on the upper-left-hand corner of the Package Manager, select \"Add package from git URL...\" on the context menu, then paste this repo's URL! While easy and straightforward, this method has a few major downside: it does not support dependency resolution and package upgrading when a new version is released. To add support for that, the following method is recommended: Through OpenUPM Installing via OpenUPM's command line tool is recommended because it supports dependency resolution, upgrading, and downgrading this package. Given this package is just an example, thought, it hadn't been added into OpenUPM yet. So the rest of these instructions are hypothetical...for now... If you haven't already installed OpenUPM , you can do so through Node.js's npm (obviously have Node.js installed in your system first): npm install -g openupm-cli Then, to install this package, just run the following command at the root of your Unity project: openupm add com.omiyagames.web Resources Documentation Change Log LICENSE Overall package is licensed under MIT , unless otherwise noted in the 3rd party licenses file and/or source code. Copyright (c) 2019-2020 Omiya Games"
  },
  "manual/changelog.html": {
    "href": "manual/changelog.html",
    "title": "Change Log: | Web documentation",
    "keywords": "Change Log: 1.4.2 Enhancement: adding conditionals to .github/workflows/documentation.yml and .github/workflows/mirror.yml to prevent the jobs from running on other repos copying this template automatically. Added comments, and updated documentation indicating these conditional's purpose, and how to remove them. 1.4.1 Enhancement: changing the mirror action to this one . 1.4.0 Feature: added Github Action to mirror the repository to Bitbucket automatically. This new file is available here: .github/workflows/mirror.yml . Enhancement: updated Customize Package manual talking about what files from .github can be deleted or edited. 1.3.1 Typo: Fixed the documentation build status badge in README.md . 1.3.0 Feature: added Github Action to auto-generate documentation in the Documentation~ folder using DocFX for Unity project as reference. Feature: adding Github feature, sponsorship! The FUNDING.yml file in .github folder adds a sponsorship button on Github with a link to Ko-Fi . Enhancement: Updated README.md to link to the newly-generated documentation, and provide better installation instructions. 1.2.2 Enhancement: making the platform OmiyaGames.Template.Editor.asmdef and OmiyaGames.Template.Editor.Tests.asmdef supports to only the editor. 1.2.1 Rename: EditorExampleTest.cs to TestEditorExample.cs . Updated class name along with it. Rename: RuntimeExampleTest.cs to TestRuntimeExample.cs . Updated class name along with it. Typo: Removed [CustomEditor(typeof(RuntimeExample))] attribute from EditorExampleTest.cs . It serves no purpose. Typo: Removed [CustomEditor(typeof(RuntimeExample))] attribute from EditorExampleTest.cs . It serves no purpose. 1.2.0 Feature: Updated the Tests assembly definition files and example scripts with proper configuration for editing/creating new unit test scripts. Also updated package.json with NUnit as a required dependency. Enhancement: Added significantly more information in README.md so other people can use a more fleshed-out markdown format to start their documentation. Enhancement: Changing package.json into a type -> Tool, and added one more keyword. Enhancement: Noting THIRD PARTY NOTICES.md is just an example, and this project doesn't actually use any 3rd party tools yet (besides unit testing, but I think that's already implied). 1.1.0 Feature: adding a Documentation~/Doxyfile to make generating Doxygen files a little easier. 1.0.2 Typo: renaming Documentation~/index.md to Documentation~/Template.md to match Unity recommendation. 1.0.1 Bug fix: Editor/EditorExample.cs now compiles properly. Typo: updated namespace in Tests/Editor/EditorExampleTest.cs to inlucde Test . Typo: changing the THIRD PARTY NOTICES.md Credits section to use a list, so each field is in its own line. 1.0.0 Initial release: Confirmed the template project works by battle-testing it to Omiya Games - Common package. Updated every text to be more generic."
  },
  "manual/README.html": {
    "href": "manual/README.html",
    "title": "| Web documentation",
    "keywords": "This folder contains markdown files listed under \"Manual\" section in the documentation. When adding or removing any files in this folder, don't forget to update toc.yml accordingly!"
  }
}